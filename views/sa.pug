doctype html
html
    head
        title rnapp课程管理
        link(href=staticFile('/css/default/style.min.css') rel="stylesheet" type="text/css")
        link(href=staticFile('/css/iconfont/iconfont.css') rel="stylesheet" type="text/css")
        link(href=staticFile('/css/richtext/css/wangEditor.min.css') rel="stylesheet" type="text/css")
        style.
            #main {
                display: flex;
                min-width: 1000px;
                height: 100%;
            }
            #left {
                width: 25%;
                padding: 20px 10px;
            }
            #right {
                width: 70%;
            }
            #richtext {
                height: 600px;
            }
            #course, #section {
                display: none
            }
            #courseform > div, #sectionform > div{
                margin: 20px 0;
            }
            input, textarea {
                margin-left: 20px;
            }
body
        #main
            #left
                #search
                    input(type="text")
                    button 查询
                #menu
            #right
                #course
                    include ./courseupload
                #section
                    include ./sectionupload
        script(src=staticFile("/js/jquery-3.2.1.min.js") type="text/javascript")
        script(src=staticFile("/js/jstree.min.js") type="text/javascript")
        script(src=staticFile("/js/wangEditor.min.js") type="text/javascript")
        script(type="text/javascript").
            $(function () {
                const $jstree = $('#menu');
                let tree = null;
                // 初始化
                $jstree.jstree({
                    core: {
                        multiple: false,
                        check_callback: true,
                        themes: {
                            variant: 'large'
                        },
                        data: !{nodes}
                    },
                    plugins: ['unique', 'dnd', 'wholerow', 'contextmenu', 'search'],
                    contextmenu: {
                        items: function ($node) {
                            tree = $jstree.jstree(true);
                            return {
                                "Create": {
                                    "separator_before": false,
                                    "separator_after": false,
                                    "label": "Create",
                                    "action": function () {
                                        tree.edit(tree.create_node($node));
                                    }
                                },
                                "Rename": {
                                    "separator_before": false,
                                    "separator_after": false,
                                    "label": "Rename",
                                    "action": function () {
                                        tree.edit($node);
                                    }
                                },
                                "Remove": {
                                    "separator_before": false,
                                    "separator_after": false,
                                    "label": "Remove",
                                    "action": function () {
                                        tree.delete_node($node);
                                    }
                                }
                            };
                        }
                    },
                    dnd: {
                        is_draggable: false
                    }
                });
                // 搜索组件
                $('button')[0].onclick=function () {
                    $('#menu').jstree(true).search($('input')[0].value);
                };
                // 增加节点
                $jstree.on('create_node.jstree', function (e, data) {
                    const $node = data.node;
                    const depth = $node.parents.length;
                    switch (depth) {
                        // 增加course
                        case 2:
                            tree.set_icon($node, 'iconfont icon-tree');
                            ajax('/api/courses', 'post', {
                                course_name: $node.text,
                                category_id: $node.parent
                            }, function (res) {
                                tree.set_id($node, res._id);
                            });
                            break;
                        // 增加chapter
                        case 3:
                            tree.set_icon($node, 'iconfont icon-leaf');
                            tree.disable_node($node);
                            ajax(`/api/courses/${$node.parents[0]}/chapters`, 'post', {
                                title: $node.text
                            }, function (res) {
                                tree.set_id($node, res.chapters[res.chapters.length - 1]._id);
                            });
                            break;
                        // 增加section
                        case 4:
                            tree.set_icon($node, 'iconfont icon-blog');
                            ajax(`/api/courses/${$node.parents[1]}/chapters/${$node.parents[0]}/sections`, 'post', {
                                title: $node.text
                            }, function (res) {
                                res.chapters.forEach(function (chapter) {
                                    if (chapter._id === $node.parent) {
                                        tree.set_id($node, chapter.sections[chapter.sections.length - 1]._id);
                                    }
                                });
                            });
                            break;
                        default:
                            tree.delete_node($node);
                    }
                });
                // 给节点重命名
                $jstree.on('rename_node.jstree', function (e, data) {
                    const $node = data.node;
                    const depth = $node.parents.length;
                    switch (depth) {
                        // course重命名
                        case 2:
                            ajax(`/api/courses/${$node.id}`, 'put', {
                                course_name: $node.text
                            });
                            break;
                        // chapter重命名
                        case 3:
                            ajax(`/api/courses/${$node.parent}/chapters/${$node.id}`, 'put', {
                                title: $node.text
                            });
                            break;
                        // section重命名
                        case 4:
                            ajax(`/api/courses/${$node.parents[1]}/chapters/${$node.parents[0]}/sections/${$node.id}`, 'put', {
                                title: $node.text
                            });
                            break;
                    }
                });
                // 删除节点
                $jstree.on('delete_node.jstree', function (e, data) {
                    const $node = data.node;
                    const depth = $node.parents.length;
                    switch (depth) {
                        // 删除course
                        case 2:
                            ajax(`/api/courses/${$node.id}`, 'delete');
                            break;
                        // 删除chapter
                        case 3:
                            ajax(`/api/courses/${$node.parent}/chapters/${$node.id}`, 'delete');
                            break;
                        // 删除section
                        case 4:
                            ajax(`/api/courses/${$node.parents[1]}/chapters/${$node.parents[0]}/sections/${$node.id}`, 'delete');
                            break;
                    }
                });
                // 选择某个节点
                $jstree.on('select_node.jstree', function (e, data) {
                    const $node = data.node;
                    const depth = $node.parents.length;
                    const selectedNode = tree.get_selected(true)[0];
                    const $course = $('#course');
                    const $section = $('#section');
                    const $title = $('.title');
                    switch (depth) {
                        // 选择courses
                        case 2:
                            $course.show().siblings().hide();
                            $title.html('更新course:' + selectedNode.text );
                            $.get(`/api/courses/${$node.id}`, function (data) {
                                 const {teacher, picture, description} = data;
                                 $('#teacher').val(teacher);
                                 $('#description').val(description);
                                 $('#pictureUrl').empty().append($('<a/>').text(picture).attr({href: picture}));
                            });
                            break;
                        // 选择section
                        case 4:
                            $section.show().siblings().hide();
                            $title.html('更新section:  ' + selectedNode.text );
                            $.get(`/api/courses/${$node.parents[1]}`, function (data) {
                                data.chapters.forEach(function (c) {
                                    if (c._id === $node.parents[0]) {
                                        c.sections.forEach(function (s) {
                                            if (s._id === $node.id) {
                                                $('#videoUrl').empty().append($('<a/>').text(s.video).attr({href: s.video}));
                                                editor.$txt.html(s.html || '<p><br></p>');
                                            }
                                        });
                                    }
                                });
                            });
                            break;
                        default:
                            $section.hide();
                            $course.hide();
                    }
                });
                // 富文本编辑器
                tree = $jstree.jstree(tree);
                const editor = new wangEditor('richtext');
                editor.config.uploadImgUrl = '/upload/richtext';
                editor.config.uploadImgFileName = 'richtextImage';
                editor.config.menus = $.map(wangEditor.config.menus, function (item, key) {
                    if (item === 'video' || item === 'location') {
                        return null;
                    }
                    return item;
                });
                editor.create();
                // course更新
                $('#courseform').on('submit', function (e) {
                    e.preventDefault();
                    const formData = new FormData(this);
                    formData.append('courseId', tree.get_selected());
                    $.ajax({
                        url: '/upload/images',
                        type: 'post',
                        async: false,
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function () {
                            alert('course更新成功！');
                        },
                        error: function () {
                            alert('section更新失败');
                        }
                    });
                });
                // section更新
                $('#sectionform').on('submit', function (e) {
                    e.preventDefault();
                    const formData = new FormData(this);
                    const $selectedNode = tree.get_selected(true)[0];
                    formData.append('html', editor.$txt.html());
                    formData.append('sectionId', $selectedNode.id);
                    formData.append('chapterId', $selectedNode.parents[0]);
                    formData.append('courseId', $selectedNode.parents[1]);
                    $.ajax({
                        url: '/upload/videos',
                        type: 'post',
                        async: false,
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function () {
                            alert('section更新成功！');
                        },
                        error: function () {
                            alert('section更新失败');
                        }
                    });
                });
                /**
                * 一些封装的常用方法
                */
                function ajax (url, method, data, success, complete, error) {
                    $.ajax({
                        url: url,
                        type: method,
                        async: false,
                        data: JSON.stringify(data),
                        contentType: 'application/json;charset=UTF-8',
                        success: function (res) {
                            success && success(res);
                        },
                        complete: function (res, status) {
                            complete && complete(res, status);
                        },
                        error: function (res) {
                            error && error(res);
                        }
                    });
                }
            });
